"use strict"; !(function (e,n,t){ const i=(function (n){ function t (e,n,t){ let i=t[t.length-1]; e.replaceChild(i,n); for (let a=t.length-2; a>=0; a--){ e.insertBefore(t[a],i),i=t[a] } } function i (e,n,t){ for (var i=[],a=e,r=Array.isArray(a),o=0,a=r?a:a[Symbol.iterator](); ;){ var l; if (r){ if (o>=a.length) { break; } l=a[o++] } else { if (o=a.next(),o.done) { break; } l=o.value } const f=l; if (f.type==="nl"&&n.nl2br){ i.push(t.createElement("br")); } else if (f.isLink&&n.check(f)){ const s=n.resolve(f); const c=s.formatted; const u=s.formattedHref; const y=s.tagName; const d=s.className; const m=s.target; const k=s.events; const h=s.attributes; const v=t.createElement(y); if (v.setAttribute("href",u),d&&v.setAttribute("class",d),m&&v.setAttribute("target",m),h) { for (const g in h){ v.setAttribute(g,h[g]); } } if (k) { for (const b in k){ v.addEventListener?v.addEventListener(b,k[b]):v.attachEvent&&v.attachEvent("on"+b,k[b]); } }v.appendChild(t.createTextNode(c)),i.push(v) } else { i.push(t.createTextNode(f.toString())) } } return i } function a (e,n,r){ if (!e||e.nodeType!==u) { throw new Error("Cannot linkify "+e+" - Invalid DOM Node type"); } const o=n.ignoreTags; if (e.tagName==="A"||f.contains(o,e.tagName)) { return e; } for (let s=e.firstChild; s;){ let d=void 0; let m=void 0; let k=void 0; switch (s.nodeType){ case u:a(s,n,r); break; case y:if (d=s.nodeValue,m=l(d),m.length===0||m.length===1&&m[0]instanceof c) { break; } k=i(m,n,r),t(e,s,k),s=k[k.length-1] }s=s.nextSibling } return e } function r (n,t){ let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2]; try { i=i||document||e&&e.document||global&&global.document } catch (r){} if (!i) { throw new Error("Cannot find document implementation. If you are in a non-browser environment like Node.js, pass the document implementation as the third argument to linkifyElement."); } return t=new s(t),a(n,t,i) } function o (n){ function t (e){ return e=r.normalize(e),this.each(function (){ r.helper(this,e,i) }) } var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1]; n.fn=n.fn||{}; try { i=i||document||e&&e.document||global&&global.document } catch (a){} if (!i) { throw new Error("Cannot find document implementation. If you are in a non-browser environment like Node.js, pass the document implementation as the second argument to linkify/jquery"); } typeof n.fn.linkify!=="function"&&(n.fn.linkify=t,n(i).ready(function (){ n("[data-linkify]").each(function (){ const e=n(this); const t=e.data(); const i=t.linkify; const a=t.linkifyNlbr; let o={nl2br:!!a&&a!==0&&a!=="false"}; "linkifyAttributes"in t&&(o.attributes=t.linkifyAttributes),"linkifyDefaultProtocol"in t&&(o.defaultProtocol=t.linkifyDefaultProtocol),"linkifyEvents"in t&&(o.events=t.linkifyEvents),"linkifyFormat"in t&&(o.format=t.linkifyFormat),"linkifyFormatHref"in t&&(o.formatHref=t.linkifyFormatHref),"linkifyTagname"in t&&(o.tagName=t.linkifyTagname),"linkifyTarget"in t&&(o.target=t.linkifyTarget),"linkifyValidate"in t&&(o.validate=t.linkifyValidate),"linkifyIgnoreTags"in t&&(o.ignoreTags=t.linkifyIgnoreTags),"linkifyClassName"in t?o.className=t.linkifyClassName:"linkifyLinkclass"in t&&(o.className=t.linkifyLinkclass),o=r.normalize(o); const l=i==="this"?e:e.find(i); l.linkify(o) }) })) } var l=n.tokenize; var f=n.options; var s=f.Options; var c=n.parser.TOKENS.TEXT; var u=1; var y=3; r.helper=a,r.normalize=function (e){ return new s(e) }; try { !(void 0).define&&(e.linkifyElement=r) } catch (d){} return o }(n)); typeof t.fn.linkify!=="function"&&i(t) }(window,linkify,jQuery));
